events {
    worker_connections 1024;
}

http {
    # --- можно оставить upstream'ы, как есть ---
    upstream backend {
        server backend:80;
    }
    upstream frontend {
        server frontend:80;
    }

    # ---------------------------
    # 1) Секция server (HTTP)
    # ---------------------------
    server {
        listen 80;
        server_name rare-books.ru;

        # Если хотите принудительно все http перенаправлять на https
        return 301 https://$host$request_uri;
    }

    # ---------------------------
    # 2) Секция server (HTTPS)
    # ---------------------------
    server {
        listen 443 ssl;
        server_name rare-books.ru;

        # Файлы сертификатов внутри контейнера
        # ssl_certificate     /etc/ssl/rare-books.ru/rare-books.ru.crt;
        # ssl_certificate_key /etc/ssl/rare-books.ru/rare-books.ru.key;
		
		ssl_certificate     /etc/letsencrypt/live/rare-books.ru/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/rare-books.ru/privkey.pem;

        
        # Дополнительно, если у вас есть корневой сертификат отдельно:
        # ssl_stapling on;
        # ssl_trusted_certificate /etc/ssl/rare-books.ru/ca.crt;
        # resolver 8.8.8.8;

        # (Дополнительные настройки, как в инструкции — можно добавить ssl_session_cache, ssl_protocols и т.п.)

        # Проксирование /api -> backend
        location /api/ {
            # Обработка CORS preflight запросов
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Проксирование к backend с необходимыми заголовками
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # Увеличиваем таймауты для длительных операций (например, инициализация)
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Добавляем CORS заголовки для обычных запросов
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        }

        # Проксирование всего остального -> frontend
        location / {
            proxy_pass http://frontend;
        }
		
		location /.well-known/acme-challenge/ {
			root /var/www/certbot;
		}
    }
}
