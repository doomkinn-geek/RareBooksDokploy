#!/bin/bash

echo "üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
echo "=============================================="

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç Docker Compose
if docker compose version &> /dev/null; then
    DOCKER_CMD="docker compose"
elif docker-compose --version &> /dev/null; then
    DOCKER_CMD="docker-compose"
else
    echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
sudo $DOCKER_CMD stop nginx

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ –º–µ—Å—Ç–µ
echo ""
echo "üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤:"
if [ -f "nginx/nginx_prod.conf" ]; then
    echo "‚úÖ nginx_prod.conf –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∏—Ä–µ–∫—Ç–∏–≤
    if grep -q "proxy_method" nginx/nginx_prod.conf; then
        echo "‚úÖ proxy_method –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    else
        echo "‚ùå proxy_method –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
        exit 1
    fi
    
    if grep -q "client_max_body_size" nginx/nginx_prod.conf; then
        echo "‚úÖ client_max_body_size –Ω–∞–π–¥–µ–Ω"
    else
        echo "‚ö†Ô∏è client_max_body_size –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
else
    echo "‚ùå nginx_prod.conf –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose.yml
echo ""
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
if grep -q "nginx_prod.conf" docker-compose.yml; then
    echo "‚úÖ nginx_prod.conf –ø–æ–¥–∫–ª—é—á–µ–Ω –≤ docker-compose.yml"
else
    echo "‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ nginx_prod.conf –≤ docker-compose.yml"
fi

# –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è
echo ""
echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è..."
sudo $DOCKER_CMD rm -f nginx

# –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫
echo ""
echo "üöÄ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
sudo $DOCKER_CMD up -d --force-recreate nginx

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ nginx (15 —Å–µ–∫—É–Ω–¥)..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞:"
sudo $DOCKER_CMD ps | grep -E "(nginx|backend|frontend)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo ""
echo "üìã –õ–æ–≥–∏ nginx (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"
sudo $DOCKER_CMD logs --tail=20 nginx

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
echo ""
echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoints:"

echo "–¢–µ—Å—Ç 1: HTTP Test API"
curl -I http://localhost/api/test/setup-status 2>/dev/null | head -1 || echo "‚ùå HTTP —Ç–µ—Å—Ç –Ω–µ—É–¥–∞—á–µ–Ω"

echo "–¢–µ—Å—Ç 2: HTTPS Test API"  
curl -I https://rare-books.ru/api/test/setup-status 2>/dev/null | head -1 || echo "‚ùå HTTPS —Ç–µ—Å—Ç –Ω–µ—É–¥–∞—á–µ–Ω"

echo "–¢–µ—Å—Ç 3: HTTPS Setup API POST"
curl -X POST https://rare-books.ru/api/setup/initialize \
     -H "Content-Type: application/json" \
     -d '{"test":"data"}' \
     -w "HTTP Status: %{http_code}\n" \
     -o /tmp/setup_response.txt 2>/dev/null

echo "–û—Ç–≤–µ—Ç Setup API:"
head -5 /tmp/setup_response.txt

echo ""
echo "üéØ –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞:"
echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./debug-nginx.sh"
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: sudo $DOCKER_CMD logs nginx"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ backend: sudo $DOCKER_CMD logs backend"

rm -f /tmp/setup_response.txt
