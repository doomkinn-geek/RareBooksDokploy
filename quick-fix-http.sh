#!/bin/bash

echo "üöÄ –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ nginx –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ HTTP setup API"
echo "======================================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
if [ ! -f "nginx/nginx_prod_http.conf" ]; then
    echo "‚ùå nginx_prod_http.conf –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo "üìã –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
sudo docker-compose ps | grep -E "(nginx|backend|frontend)" || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"

echo ""
echo "üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ HTTP-–≤–µ—Ä—Å–∏—é nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –ë—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [ -f "docker-compose.yml.backup" ]; then
    echo "‚ÑπÔ∏è –ë—ç–∫–∞–ø docker-compose.yml —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    cp docker-compose.yml docker-compose.yml.backup
    echo "‚úÖ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø docker-compose.yml"
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ docker-compose.yml –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è HTTP –≤–µ—Ä—Å–∏–∏
sed -i.tmp 's|./nginx/nginx_prod.conf:/etc/nginx/nginx.conf|./nginx/nginx_prod_http.conf:/etc/nginx/nginx.conf|g' docker-compose.yml

if grep -q "nginx_prod_http.conf" docker-compose.yml; then
    echo "‚úÖ docker-compose.yml –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è HTTP –≤–µ—Ä—Å–∏–∏"
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å docker-compose.yml"
    exit 1
fi

echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ nginx..."
sudo docker-compose stop nginx
sudo docker-compose rm -f nginx

echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ nginx —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
sudo docker-compose up -d nginx

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (10 —Å–µ–∫—É–Ω–¥)..."
sleep 10

echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
sudo docker-compose ps | grep -E "(nginx|backend|frontend)"

echo ""
echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTTP endpoints..."

echo "–¢–µ—Å—Ç 1: HTTP Test API"
http_test=$(curl -s -w "%{http_code}" -o /dev/null http://localhost/api/test/setup-status 2>/dev/null)
if [ "$http_test" = "200" ]; then
    echo "‚úÖ HTTP Test API —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–æ–¥: $http_test)"
else
    echo "‚ùå HTTP Test API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–æ–¥: $http_test)"
fi

echo "–¢–µ—Å—Ç 2: HTTP Setup API (GET)"
setup_get=$(curl -s -w "%{http_code}" -o /dev/null http://localhost/api/setup 2>/dev/null)
if [ "$setup_get" = "200" ]; then
    echo "‚úÖ HTTP Setup API GET —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–æ–¥: $setup_get)"
else
    echo "‚ö†Ô∏è HTTP Setup API GET (–∫–æ–¥: $setup_get)"
fi

echo "–¢–µ—Å—Ç 3: HTTP Setup API (POST)"
setup_post=$(curl -s -w "%{http_code}" -o /tmp/setup_test.json \
    -X POST http://localhost/api/setup/initialize \
    -H "Content-Type: application/json" \
    -d '{"test":"data"}' 2>/dev/null)

echo "–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: $setup_post"
if [ -f "/tmp/setup_test.json" ]; then
    echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞:"
    head -3 /tmp/setup_test.json
    
    if grep -q "<html>" /tmp/setup_test.json; then
        echo "‚ùå –ü–æ–ª—É—á–µ–Ω HTML –≤–º–µ—Å—Ç–æ JSON - –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞"
    elif grep -q '"' /tmp/setup_test.json; then
        echo "‚úÖ –ü–æ–ª—É—á–µ–Ω JSON –æ—Ç–≤–µ—Ç - –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞!"
    fi
    rm -f /tmp/setup_test.json
fi

echo ""
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ nginx:"
sudo docker-compose logs --tail=10 nginx | grep -E "(error|warn|started|setup|test)" || echo "–ù–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –ª–æ–≥–æ–≤"

echo ""
echo "üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo ""

if [ "$http_test" = "200" ] && [ "$setup_post" != "405" ]; then
    echo "‚úÖ HTTP –≤–µ—Ä—Å–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ:"
    echo "1. –û—Ç–∫—Ä—ã—Ç—å http://localhost/api/setup –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"
    echo "2. –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ HTTPS –≤–µ—Ä—Å–∏–∏:"
    echo "   ./restore-https.sh"
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É:"
    echo "   ./debug-nginx.sh"
    echo ""
    echo "–ò–ª–∏ –æ—Ç–∫–∞—Ç–∏—Ç–µ—Å—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
    echo "   cp docker-compose.yml.backup docker-compose.yml"
    echo "   sudo docker-compose restart nginx"
fi

echo ""
echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   sudo docker-compose logs nginx     # –õ–æ–≥–∏ nginx"
echo "   sudo docker-compose logs backend   # –õ–æ–≥–∏ backend"
echo "   ./setup-diagnostics.sh            # –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"
