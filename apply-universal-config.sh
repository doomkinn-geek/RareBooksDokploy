#!/bin/bash

echo "üöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ RareBooksService"
echo "======================================================="

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç Docker Compose
if command -v docker &> /dev/null; then
    if docker compose version &> /dev/null; then
        DOCKER_CMD="docker compose"
        echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º docker compose (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)"
    elif docker-compose --version &> /dev/null; then
        DOCKER_CMD="docker-compose"
        echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º docker-compose (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç)"
    else
        echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
else
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    exit 1
fi

echo ""
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
files_to_check=(
    "nginx/nginx_prod.conf"
    "docker-compose.yml"
)

missing_files=()
for file in "${files_to_check[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file - –Ω–∞–π–¥–µ–Ω"
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è nginx_prod.conf
        if [[ "$file" == "nginx/nginx_prod.conf" ]]; then
            if grep -q "location ~ ^/api/(setup|test|setupcheck)/" "$file"; then
                echo "   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx –Ω–∞–π–¥–µ–Ω–∞"
            else
                echo "   ‚ùå nginx_prod.conf –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω!"
                missing_files+=("$file (—Ç—Ä–µ–±—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è)")
            fi
        fi
    else
        echo "‚ùå $file - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        missing_files+=("$file")
    fi
done

if [ ${#missing_files[@]} -gt 0 ]; then
    echo ""
    echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Ñ–∞–π–ª—ã:"
    for file in "${missing_files[@]}"; do
        echo "   - $file"
    done
    echo ""
    echo "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
    exit 1
fi

echo ""
echo "üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
sudo $DOCKER_CMD ps | grep -E "(nginx|backend|frontend)" || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"

echo ""
echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
backup_suffix=$(date +%Y%m%d_%H%M%S)
if [ ! -f "docker-compose.yml.backup_$backup_suffix" ]; then
    cp docker-compose.yml "docker-compose.yml.backup_$backup_suffix"
    echo "‚úÖ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: docker-compose.yml.backup_$backup_suffix"
fi

echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
sudo $DOCKER_CMD stop nginx

echo ""
echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
sudo $DOCKER_CMD rm -f nginx

echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ nginx —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
sudo $DOCKER_CMD up -d nginx

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ nginx (20 —Å–µ–∫—É–Ω–¥)..."
sleep 20

echo ""
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"
sudo $DOCKER_CMD ps | grep -E "(nginx|backend|frontend)"

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx healthcheck:"
for i in {1..5}; do
    health_status=$(sudo docker inspect nginx_container --format='{{.State.Health.Status}}' 2>/dev/null || echo "unknown")
    echo "–ü–æ–ø—ã—Ç–∫–∞ $i/5: $health_status"
    
    if [ "$health_status" = "healthy" ]; then
        echo "‚úÖ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–¥–æ—Ä–æ–≤!"
        break
    elif [ "$i" -eq 5 ]; then
        echo "‚ö†Ô∏è nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤—Å–µ –µ—â–µ –Ω–µ –∑–¥–æ—Ä–æ–≤. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏..."
        sudo $DOCKER_CMD logs --tail=20 nginx
    else
        sleep 10
    fi
done

echo ""
echo "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# –¢–µ—Å—Ç 1: HTTP Setup API
echo "–¢–µ—Å—Ç 1: HTTP Setup API"
http_setup_test=$(curl -s -w "%{http_code}" -o /tmp/setup_test.json \
    http://localhost/api/test/setup-status 2>/dev/null || echo "000")

if [ "$http_setup_test" = "200" ]; then
    echo "‚úÖ HTTP Setup API —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–æ–¥: $http_setup_test)"
    if [ -f "/tmp/setup_test.json" ] && grep -q '"success":true' /tmp/setup_test.json; then
        echo "   ‚úÖ JSON –æ—Ç–≤–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    fi
else
    echo "‚ùå HTTP Setup API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–æ–¥: $http_setup_test)"
fi

# –¢–µ—Å—Ç 2: HTTP Setup POST
echo "–¢–µ—Å—Ç 2: HTTP Setup POST"
http_post_test=$(curl -s -w "%{http_code}" -o /tmp/post_test.json \
    -X POST http://localhost/api/setup/initialize \
    -H "Content-Type: application/json" \
    -d '{"test":"data"}' 2>/dev/null || echo "000")

echo "–ö–æ–¥ –æ—Ç–≤–µ—Ç–∞ POST: $http_post_test"
if [ -f "/tmp/post_test.json" ]; then
    if grep -q "<html>" /tmp/post_test.json; then
        echo "‚ùå –ü–æ–ª—É—á–µ–Ω HTML –≤–º–µ—Å—Ç–æ JSON - –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–µ–Ω–∞"
    elif grep -q '"' /tmp/post_test.json; then
        echo "‚úÖ –ü–æ–ª—É—á–µ–Ω JSON –æ—Ç–≤–µ—Ç - POST –∑–∞–ø—Ä–æ—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç!"
    fi
fi

# –¢–µ—Å—Ç 3: HTTPS —Ä–∞–±–æ—Ç–∞–µ—Ç (–µ—Å–ª–∏ SSL –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
echo "–¢–µ—Å—Ç 3: HTTPS (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)"
https_test=$(curl -k -s -w "%{http_code}" -o /dev/null \
    https://rare-books.ru/api/test/setup-status 2>/dev/null || echo "000")

if [ "$https_test" = "200" ]; then
    echo "‚úÖ HTTPS —Ç–∞–∫–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–æ–¥: $https_test)"
elif [ "$https_test" = "000" ]; then
    echo "‚ÑπÔ∏è HTTPS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)"
else
    echo "‚ö†Ô∏è HTTPS —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏ (–∫–æ–¥: $https_test)"
fi

# –¢–µ—Å—Ç 4: –†–µ–¥–∏—Ä–µ–∫—Ç –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –Ω–∞ HTTPS
echo "–¢–µ—Å—Ç 4: HTTP -> HTTPS —Ä–µ–¥–∏—Ä–µ–∫—Ç (–¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü)"
redirect_test=$(curl -s -w "%{http_code}" -o /dev/null \
    http://localhost/ 2>/dev/null || echo "000")

if [ "$redirect_test" = "301" ]; then
    echo "‚úÖ –û–±—ã—á–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç—è—Ç –Ω–∞ HTTPS"
elif [ "$redirect_test" = "200" ]; then
    echo "‚ÑπÔ∏è –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ HTTP (–≤–æ–∑–º–æ–∂–Ω–æ, –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)"
else
    echo "‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –∫–æ–¥ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞: $redirect_test"
fi

echo ""
echo "üìã –õ–æ–≥–∏ nginx (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 15 —Å—Ç—Ä–æ–∫):"
sudo $DOCKER_CMD logs --tail=15 nginx | grep -E "(error|warn|started|setup|test|nginx)" || echo "–ù–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –ª–æ–≥–æ–≤"

echo ""
echo "üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
rm -f /tmp/setup_test.json /tmp/post_test.json

if [ "$http_setup_test" = "200" ] && [ "$http_post_test" != "405" ]; then
    echo ""
    echo "‚úÖ üéâ –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –£–°–ü–ï–®–ù–û –ü–†–ò–ú–ï–ù–ï–ù–ê!"
    echo ""
    echo "üìö –¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω–æ:"
    echo "   üåê Setup API —á–µ—Ä–µ–∑ HTTP: http://localhost/api/setup"
    echo "   üåê Setup API —á–µ—Ä–µ–∑ HTTPS: https://rare-books.ru/api/setup (–µ—Å–ª–∏ SSL –Ω–∞—Å—Ç—Ä–æ–µ–Ω)"
    echo "   üìä Test API: http://localhost/api/test/setup-status"
    echo "   üîÑ POST –∑–∞–ø—Ä–æ—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    echo ""
    echo "üí° –ë–æ–ª—å—à–µ –ù–ï –ù–£–ñ–ù–û –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!"
    echo "   Setup API –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ HTTP"
    echo "   –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç HTTPS"
    echo ""
    echo "üöÄ –ú–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!"
else
    echo ""
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã –≤—Å–µ –µ—â–µ –æ—Å—Ç–∞—é—Ç—Å—è:"
    [ "$http_setup_test" != "200" ] && echo "   - HTTP Setup API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    [ "$http_post_test" = "405" ] && echo "   - POST –∑–∞–ø—Ä–æ—Å—ã –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è"
    echo ""
    echo "üîß –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º:"
    echo "   ./setup-diagnostics.sh --verbose"
    echo ""
    echo "üìû –ò–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    echo "   sudo $DOCKER_CMD logs nginx"
    echo "   sudo $DOCKER_CMD logs backend"
fi

echo ""
echo "üíæ –ë—ç–∫–∞–ø—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:"
echo "   docker-compose.yml.backup_$backup_suffix"
echo ""
echo "üèÅ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
