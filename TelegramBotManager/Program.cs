using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using Telegram.Bot;
using Telegram.Bot.Polling;
using Telegram.Bot.Types;
using Telegram.Bot.Exceptions;

namespace TelegramBotManager
{
    class Program
    {
        static async Task Main(string[] args)
        {
            // –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            var configuration = new ConfigurationBuilder()
                .SetBasePath(Directory.GetCurrentDirectory())
                .AddJsonFile("appsettings.json", optional: false, reloadOnChange: true)
                .Build();

            var token = configuration["TelegramBot:Token"];
            
            if (string.IsNullOrEmpty(token) || token == "–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê")
            {
                Console.WriteLine("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!");
                Console.WriteLine("–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª appsettings.json –∏ —É–∫–∞–∂–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞.");
                Console.WriteLine("–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –¥–ª—è –≤—ã—Ö–æ–¥–∞...");
                Console.ReadKey();
                return;
            }

            // –°–æ–∑–¥–∞–µ–º —Ö–æ—Å—Ç –¥–ª—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            using var host = Host.CreateDefaultBuilder(args)
                .ConfigureServices((context, services) =>
                {
                    services.AddSingleton<ITelegramBotClient>(new TelegramBotClient(token));
                    services.AddSingleton<BotService>();
                })
                .Build();

            var logger = host.Services.GetRequiredService<ILogger<Program>>();
            var botService = host.Services.GetRequiredService<BotService>();

            try
            {
                logger.LogInformation("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...");
                await botService.StartAsync();
                
                Console.WriteLine("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...");
                
                // –û–∂–∏–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
                var cancellationTokenSource = new CancellationTokenSource();
                Console.CancelKeyPress += (_, e) =>
                {
                    e.Cancel = true;
                    cancellationTokenSource.Cancel();
                };

                await Task.Delay(-1, cancellationTokenSource.Token);
            }
            catch (OperationCanceledException)
            {
                logger.LogInformation("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏");
            }
            catch (Exception ex)
            {
                logger.LogError(ex, "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞");
            }
            finally
            {
                await botService.StopAsync();
                logger.LogInformation("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
            }
        }
    }

    public class BotService
    {
        private readonly ITelegramBotClient _botClient;
        private readonly ILogger<BotService> _logger;
        private CancellationTokenSource? _cancellationTokenSource;

        public BotService(ITelegramBotClient botClient, ILogger<BotService> logger)
        {
            _botClient = botClient;
            _logger = logger;
        }

        public async Task StartAsync()
        {
            _cancellationTokenSource = new CancellationTokenSource();

            var receiverOptions = new ReceiverOptions
            {
                AllowedUpdates = { }, // –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                DropPendingUpdates = true
            };

            _botClient.StartReceiving(
                HandleUpdateAsync,
                HandlePollingErrorAsync,
                receiverOptions,
                _cancellationTokenSource.Token
            );

            var me = await _botClient.GetMeAsync(_cancellationTokenSource.Token);
            _logger.LogInformation("–ë–æ—Ç {BotName} (@{BotUsername}) –∑–∞–ø—É—â–µ–Ω!", me.FirstName, me.Username);
        }

        public async Task StopAsync()
        {
            if (_cancellationTokenSource != null)
            {
                _cancellationTokenSource.Cancel();
                _cancellationTokenSource.Dispose();
            }
        }

        private async Task HandleUpdateAsync(ITelegramBotClient botClient, Update update, CancellationToken cancellationToken)
        {
            try
            {
                if (update.Message is not { } message) return;
                if (message.Text is not { } messageText) return;

                var chatId = message.Chat.Id;
                var userId = message.From?.Id;

                _logger.LogInformation("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {UserId}: {Message}", userId, messageText);

                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                var response = messageText.ToLower() switch
                {
                    "/start" => GenerateStartMessage(userId?.ToString()),
                    "/help" => GenerateHelpMessage(),
                    "/link" => GenerateLinkInstructions(),
                    var text when text.StartsWith("/link ") => await ProcessLinkCommand(text, userId?.ToString()),
                    _ => "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
                };

                await botClient.SendTextMessageAsync(
                    chatId: chatId,
                    text: response,
                    parseMode: Telegram.Bot.Types.Enums.ParseMode.Html,
                    cancellationToken: cancellationToken);
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è");
            }
        }

        private async Task HandlePollingErrorAsync(ITelegramBotClient botClient, Exception exception, CancellationToken cancellationToken)
        {
            var errorMessage = exception switch
            {
                ApiRequestException apiRequestException
                    => $"–û—à–∏–±–∫–∞ Telegram API:\n[{apiRequestException.ErrorCode}]\n{apiRequestException.Message}",
                _ => exception.ToString()
            };

            _logger.LogError("–û—à–∏–±–∫–∞ –ø–æ–ª–ª–∏–Ω–≥–∞: {ErrorMessage}", errorMessage);

            // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –ø—Ä–∏ –æ—à–∏–±–∫–µ
            await Task.Delay(TimeSpan.FromSeconds(5), cancellationToken);
        }

        private string GenerateStartMessage(string? telegramId)
        {
            return $"""
                ü§ñ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Ä–µ–¥–∫–∏—Ö –∫–Ω–∏–≥–∞—Ö!</b>

                üìã <b>–í–∞—à Telegram ID:</b> <code>{telegramId}</code>

                –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∫–Ω–∏–≥–∞—Ö –Ω–∞ —Ç–æ—Ä–≥–∞—Ö.

                <b>–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:</b>
                1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç rare-books.ru
                2. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ —Å–≤–æ–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ
                3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
                4. –ù–∞–∂–º–∏—Ç–µ "–ü—Ä–∏–≤—è–∑–∞—Ç—å Telegram"
                5. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: /link –¢–û–ö–ï–ù

                –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥.
                """;
        }

        private string GenerateHelpMessage()
        {
            return """
                üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞</b>

                <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
                /start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ ID
                /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
                /link –¢–û–ö–ï–ù - –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç —Å —Å–∞–π—Ç–∞
                /settings - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
                /list - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

                <b>–ö–∞–∫ –Ω–∞—á–∞—Ç—å:</b>
                1. –ü–æ–ª—É—á–∏—Ç–µ –≤–∞—à Telegram ID –∫–æ–º–∞–Ω–¥–æ–π /start
                2. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç rare-books.ru –≤ —Ä–∞–∑–¥–µ–ª "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
                3. –°–æ–∑–¥–∞–π—Ç–µ —Ç–æ–∫–µ–Ω –ø—Ä–∏–≤—è–∑–∫–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /link
                4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∫–Ω–∏–≥
                5. –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –ª–æ—Ç–∞—Ö!

                <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
                –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∞–π—Ç–∞.
                """;
        }

        private string GenerateLinkInstructions()
        {
            return """
                üîó <b>–ü—Ä–∏–≤—è–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ –∫ Telegram</b>

                –î–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞:
                1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç rare-books.ru
                2. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ —Å–≤–æ–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ
                3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
                4. –ù–∞–∂–º–∏—Ç–µ "–ü—Ä–∏–≤—è–∑–∞—Ç—å Telegram"
                5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
                6. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É: <code>/link –í–ê–®_–¢–û–ö–ï–ù</code>

                –ù–∞–ø—Ä–∏–º–µ—Ä: <code>/link ABC12345</code>

                ‚è∞ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 24 —á–∞—Å–∞.
                """;
        }

        private async Task<string> ProcessLinkCommand(string text, string? telegramId)
        {
            var parts = text.Split(' ', StringSplitOptions.RemoveEmptyEntries);
            
            if (parts.Length != 2)
            {
                return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>/link –í–ê–®_–¢–û–ö–ï–ù</code>";
            }

            var token = parts[1].Trim().ToUpper();

            // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –≤—ã–∑–æ–≤ API –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞
            // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
            
            return $"""
                ‚úÖ –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–≤—è–∑–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞!
                
                üìã –¢–æ–∫–µ–Ω: <code>{token}</code>
                üë§ Telegram ID: <code>{telegramId}</code>
                
                ‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞.
                –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç–∞, –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å —Å–∞–π—Ç–æ–º rare-books.ru.
                """;
        }
    }
}
