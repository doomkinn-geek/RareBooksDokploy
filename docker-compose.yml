version: '3.8'
name: RareBooksDokploy

services:
  db_books:
    image: postgres:15
    container_name: rarebooks_books_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=RareBooks_Books
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    ports:
      - "5433:5432"        # на хосте 5433, внутри контейнера 5432
    volumes:
      - db_books_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  db_users:
    image: postgres:15
    container_name: rarebooks_users_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=RareBooks_Users
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    ports:
      - "5434:5432"
    volumes:
      - db_users_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: RareBooksService.WebApi/Dockerfile
    container_name: rarebooks_backend
    depends_on:
      db_books:
        condition: service_healthy
      db_users:
        condition: service_healthy
    environment:
      - ConnectionStrings__BooksDb=Host=db_books;Port=5432;Database=RareBooks_Books;Username=postgres;Password=123456
      - ConnectionStrings__UsersDb=Host=db_users;Port=5432;Database=RareBooks_Users;Username=postgres;Password=123456
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Production
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:80/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s

  frontend:
    build:
      context: ./rarebooksservice.frontend.v3
      dockerfile: Dockerfile
    container_name: rarebooks_frontend
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - VITE_API_URL=http://backend:80/api
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  proxy:
    image: nginx:stable-alpine
    container_name: nginx_container
    ports:
      - 80:80
      - 443:443
    volumes:
      #- ./nginx/nginx_dev.conf:/etc/nginx/nginx.conf
      - ./nginx/nginx_prod.conf:/etc/nginx/nginx.conf
      - /home/docker/ssl/rare-books.ru:/etc/ssl/rare-books.ru:ro
      #- /var/www/certbot:/var/www/certbot  
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:80 > /dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db_books_data:
  db_users_data:
